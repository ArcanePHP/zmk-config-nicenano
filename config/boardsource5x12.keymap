/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {

    behaviors {
        tdn1: tap_dance_n1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_N1";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp N1>, <&kp EXCL>;
        };
        
        tdn2: tap_dance_n2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_N2";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp N2>, <&kp AT>;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |  5   |   6   |  7    |  8   |  9   |   0   | BSPC  |
            // |  TAB  |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   |   '   |
            // |   `   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   | ENTER |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   | UARW  |  /    |
            // | LCTL  | LGUI | LALT | LOWR | SPACE| SPACE| SPACE | SPACE | RAIS | LARW | DARW  | RARW  |


            bindings = <
                &kp ESC    &tdn1        &tdn2       &kp N3   &kp N4     &kp N5      &kp N6      &kp N7  &kp N8      &kp N9      &kp N0      &kp BSPC
                &kp TAB    &kp Q        &kp W       &kp E    &kp R      &kp T       &kp Y       &kp U   &kp I       &kp O       &kp P       &kp SQT
                &kp GRAVE  &kp A        &kp S       &kp D    &kp F      &kp G       &kp H       &kp J   &kp K       &kp L       &kp SEMI    &kp RET
                &kp LSHFT  &kp Z        &kp X       &kp C    &kp V      &kp B       &kp N       &kp M   &kp COMMA   &kp DOT     &kp UP      &kp FSLH
                &kp LCTRL  &kp LGUI     &kp LALT    &mo 1    &kp SPACE  &kp SPACE   &kp SPACE   &kp SPACE  &mo 2    &kp LEFT    &kp DOWN    &kp RIGHT 
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------------
            // |   F1  |  F2   |  F3   |  F4  |  F5   |  F6   |   F7  |  F8   |  F9  | F10  |  F11  |  F12  |
            // |  TAB  |  INS  |  HOME | PG UP|       |       |       |       |      |      |   -   |   =   |
            // |   `   |  DEL  |  END  | PG DN|       |       |       |       |      |      |       |       |
            // | R SFT |       |       |      |       |       |       |       |  [   |  ]   |       |   \   |
            // | R CTL | RGUI  | RALT  | LOWR | SPACE | SPACE | SPACE | SPACE | RAIS |      |       |       |
            bindings = <
                &kp F1     &kp F2      &kp F3      &kp F4    &kp F5     &kp F6      &kp F7      &kp F8       &kp F9    &kp F10    &kp F11    &kp F12
                &kp TAB    &kp INS     &kp HOME    &kp PG_UP &none      &none       &none       &none        &none     &none      &kp MINUS  &kp EQUAL
                &kp GRAVE  &kp DEL     &kp END     &kp PG_DN &none      &none       &none       &none        &none     &none      &none      &none
                &kp CAPS      &none       &none       &none     &none      &none       &none       &none        &kp LBKT  &kp RBKT   &none      &kp BSLH
                &kp RCTRL  &kp RGUI    &kp RALT    &mo 1     &kp SPACE  &kp SPACE   &kp SPACE   &kp SPACE    &mo 2     &none      &none      &none
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------
            // | PRTSCN|       |       |      |       |BT_NXT |BT_CLR |       |      |      |       |   DEL  |
            // |  TAB  |       |       |      |       |       |       |       |      |      |   -   |    =   |
            // |   `   |       |       |      |       |       |       |       |      |      |       |        |
            // | R SFT |       |       |      |       |       |       |       |  [   |  ]   |       |    \   |
            // | R CTL | RGUI  | RALT  | LOWR | SPACE | SPACE | SPACE | SPACE | RAIS |      |       |        |
            bindings = <
                &kp PSCRN   &none    &none       &none     &bt BT_NXT &bt BT_CLR   &none       &none        &none     &none      &none       &kp DEL
                &kp TAB     &none    &none       &none     &none      &none        &none       &none        &none     &none      &kp MINUS   &kp EQUAL
                &kp GRAVE   &none    &none       &none     &none      &none        &none       &none        &none     &none      &none       &none
                &kp RSHFT   &none    &none       &none     &none      &none        &none       &none        &kp LBKT  &kp RBKT   &none       &kp BSLH
                &kp RCTRL   &kp RGUI &kp RALT    &mo 1     &kp SPACE  &kp SPACE    &kp SPACE   &kp SPACE    &mo 2     &none      &none       &none
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------------
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            bindings = <
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
            >;
        };

        flock_layer {
            // -----------------------------------------------------------------------------------------------
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            // |      |       |       |       |       |      |       |       |       |       |       |       |
            bindings = <
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
                &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &none 
            >;
        };
    };
};
